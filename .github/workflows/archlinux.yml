on:
  schedule:
    - cron: '0 0 5 * *'
  push:
    branches:
      - 'master'

name: "Build And Push PHP Docker Images"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      docker: ${{ steps.filter.outputs.docker }}
      docker_base: ${{ steps.filter.outputs.docker_base }}
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          fetch-depth: '0'

      - name: "Detect changes"
        uses: proophsoftware/action-paths-filter@v2
        id: filter
        with:
          base: ${{ steps.tag_version.outputs.previous_tag }}
          filters: |
            docker_base:
              - 'arch-linux/arch-linux'
              - 'arch-linux/arch-linux-mesa'
              - 'arch-linux/arch-linux-nvidia'
            docker:
              - 'arch-linux/inc/*'
              - 'arch-linux/m4/*'

  build-and-push-docker:
    name: "Build And Push PHP Docker Images"
    runs-on: ubuntu-latest
    needs: changes

    steps:
      - name: Enable experimental features for the Docker daemon and CLI
        run: |
          echo $'{\n  "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          mkdir -p ~/.docker
          echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
          sudo service docker restart
          docker version -f '{{.Client.Experimental}}'
          docker version -f '{{.Server.Experimental}}'
          docker buildx version

      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          fetch-depth: '0'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Generate Docker files"
        working-directory: arch-linux
        run: make

      - name: "Build base images"
        if: ${{ github.event_name == 'schedule' || needs.changes.outputs.docker_base == 'true' }}
        working-directory: arch-linux
        run: make docker-build-base

      - name: "Push base images"
        if: ${{ github.event_name == 'schedule' || needs.changes.outputs.docker_base == 'true' }}
        working-directory: arch-linux
        run: make docker-push-base

      - name: "Pull base images"
        if: ${{ github.event_name != 'schedule' || needs.changes.outputs.docker_base != 'true' }}
        working-directory: arch-linux
        run: make docker-pull-latest

      - name: "Build images"
        if: ${{ needs.changes.outputs.docker == 'true' || needs.changes.outputs.docker_base == 'true' }}
        working-directory: arch-linux
        run: make docker-build

      - name: "Push images"
        if: ${{ needs.changes.outputs.docker == 'true' || needs.changes.outputs.docker_base == 'true' }}
        working-directory: arch-linux
        run: make docker-push


